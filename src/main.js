import { renderCategoryList } from "./category.js";
import { renderClipList, renderClipContent } from "./clip.js";
import {
  clipData,
  categoryOrder,
  currentCategoryId,
  toggleFavoritesOnly,
  getShowFavoritesOnly,
  setClipData,
  setCategoryOrder,
  getCategoryOrder,
  setCurrentCategory,
  uuid,
} from "./data.js";

// ‚úÖ ÏÉà Ïπ¥ÌÖåÍ≥†Î¶¨ Ï∂îÍ∞Ä
document.querySelector(".add-category").addEventListener("click", () => {
  const sidebar = document.querySelector(".sidebar");
  const clipList = document.querySelector(".clip-list");
  const clipContent = document.querySelector(".clip-content");

  if (sidebar.querySelector(".new-cat")) return;

  const div = document.createElement("div");
  div.className = "category new-cat";
  div.innerHTML = `
    <input class="temp-input" placeholder="Ïπ¥ÌÖåÍ≥†Î¶¨Î™Ö ÏûÖÎ†•" />
    <div class="actions">
      <button class="save-cat">üíæ</button>
    </div>
  `;

  sidebar.insertBefore(div, sidebar.querySelector("hr"));

  const input = div.querySelector("input");
  const saveBtn = div.querySelector(".save-cat");

  const save = () => {
    const value = input.value.trim();
    if (!value) return alert("Ïπ¥ÌÖåÍ≥†Î¶¨ Ïù¥Î¶ÑÏùÑ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.");

    const exists = categoryOrder.some((c) => c.name === value);
    if (exists) return alert("Ïù¥ÎØ∏ Ï°¥Ïû¨ÌïòÎäî Ïπ¥ÌÖåÍ≥†Î¶¨ÏûÖÎãàÎã§.");

    const newCat = {
      id: uuid(), // ‚úÖ Í≥†Ïú† ID Î∂ÄÏó¨
      name: value,
    };

    setCategoryOrder([...getCategoryOrder(), newCat]);

    renderCategoryList();
    clipList.classList.add("hidden");
    clipContent.classList.add("hidden");
  };

  saveBtn.addEventListener("click", save);
  input.addEventListener("keypress", (e) => {
    if (e.key === "Enter") save();
  });

  input.focus();
});

// ‚úÖ ÏÉà ÌÅ¥Î¶Ω Ï∂îÍ∞Ä
document.querySelector(".add-clip").addEventListener("click", () => {
  if (!currentCategoryId) return alert("Ïπ¥ÌÖåÍ≥†Î¶¨Î•º Î®ºÏ†Ä ÏÑ†ÌÉùÌïòÏÑ∏Ïöî.");

  const newClip = {
    id: uuid(), // ‚úÖ Í≥†Ïú† ID
    categoryId: currentCategoryId,
    title: "(Ï†úÎ™© ÏóÜÏùå)",
    content: "(ÎÇ¥Ïö© ÏóÜÏùå)",
    from: "(Ï∂úÏ≤ò ÏóÜÏùå)", // ‚úÖ Í∏∞Î≥∏Í∞í

    isFavorite: false,
  };

  clipData.push(newClip);
  renderClipList(currentCategoryId);
  renderClipContent(newClip);
});

// ‚≠ê Ï¶êÍ≤®Ï∞æÍ∏∞ ÌïÑÌÑ∞ ÌÜ†Í∏Ä
document.querySelector(".toggle-favorites").addEventListener("click", () => {
  toggleFavoritesOnly();

  const button = document.querySelector(".toggle-favorites");
  button.textContent = getShowFavoritesOnly()
    ? "‚≠ê Ï†ÑÏ≤¥ Î≥¥Í∏∞"
    : "‚≠ê Ï¶êÍ≤®Ï∞æÍ∏∞Îßå Î≥¥Í∏∞";

  if (currentCategoryId) {
    renderClipList(currentCategoryId);
  }
});

renderCategoryList();
document.querySelector(".clip-list").classList.add("hidden");
document.querySelector(".clip-content").classList.add("hidden");
